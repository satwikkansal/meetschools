<?php

namespace Internshala\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class InternshalaModelsSchool_InfrastructureProxy extends \Internshala\Models\School_Infrastructure implements \Doctrine\ORM\Proxy\Proxy {

    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;

    public function __construct($entityPersister, $identifier) {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }

    /** @private */
    public function __load() {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    public function id() {
        $this->__load();
        return parent::id();
    }

    public function set_school(\Internshala\Models\School $school) {
        $this->__load();
        return parent::set_school($school);
    }

    public function school() {
        $this->__load();
        return parent::school();
    }

    public function set_swimming_pool($swimming_pool) {
        $this->__load();
        return parent::set_swimming_pool($swimming_pool);
    }

    public function swimming_pool() {
        $this->__load();
        return parent::swimming_pool();
    }

    public function set_dance_room($dance_room) {
        $this->__load();
        return parent::set_dance_room($dance_room);
    }

    public function dance_room() {
        $this->__load();
        return parent::dance_room();
    }

    public function set_gym($gym) {
        $this->__load();
        return parent::set_gym($gym);
    }

    public function gym() {
        $this->__load();
        return parent::gym();
    }

    public function set_music_room($music_room) {
        $this->__load();
        return parent::set_music_room($music_room);
    }

    public function music_room() {
        $this->__load();
        return parent::music_room();
    }

    public function set_hostel($hostel) {
        $this->__load();
        return parent::set_hostel($hostel);
    }

    public function hostel() {
        $this->__load();
        return parent::hostel();
    }

    public function set_medical_facility($medical_facility) {
        $this->__load();
        return parent::set_medical_facility($medical_facility);
    }

    public function medical_facility() {
        $this->__load();
        return parent::medical_facility();
    }

    public function set_indoor_games($indoor_games) {
        $this->__load();
        return parent::set_indoor_games($indoor_games);
    }

    public function indoor_games() {
        $this->__load();
        return parent::indoor_games();
    }

    public function set_computer_aided_learning($computer_aided_learning) {
        $this->__load();
        return parent::set_computer_aided_learning($computer_aided_learning);
    }

    public function computer_aided_learning() {
        $this->__load();
        return parent::computer_aided_learning();
    }

    public function set_library($library) {
        $this->__load();
        return parent::set_library($library);
    }

    public function library() {
        $this->__load();
        return parent::library();
    }

    public function set_playground($playground) {
        $this->__load();
        return parent::set_playground($playground);
    }

    public function playground() {
        $this->__load();
        return parent::playground();
    }

    public function set_ramps($ramps) {
        $this->__load();
        return parent::set_ramps($ramps);
    }

    public function ramps() {
        $this->__load();
        return parent::ramps();
    }

    public function set_created_at($created_at) {
        $this->__load();
        return parent::set_created_at($created_at);
    }

    public function created_at() {
        $this->__load();
        return parent::created_at();
    }

    public function set_last_updated_at($last_updated_at) {
        $this->__load();
        return parent::set_last_updated_at($last_updated_at);
    }

    public function last_updated_at() {
        $this->__load();
        return parent::last_updated_at();
    }

    public function __toString() {
        $this->__load();
        return parent::__toString();
    }

    public function &to_array() {
        $this->__load();
        return parent::to_array();
    }

    public function on_pre_presist() {
        $this->__load();
        return parent::on_pre_presist();
    }

    public function on_pre_update() {
        $this->__load();
        return parent::on_pre_update();
    }

    public function on_pre_remove() {
        $this->__load();
        return parent::on_pre_remove();
    }

    public function on_post_load() {
        $this->__load();
        return parent::on_post_load();
    }

    public function __sleep() {
        return array('__isInitialized__', 'id', 'school', 'swimming_pool', 'dance_room', 'gym', 'music_room', 'hostel', 'medical_facility', 'indoor_games', 'computer_aided_learning', 'library', 'playground', 'ramps', 'created_at', 'last_updated_at');
    }

    public function __clone() {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
}